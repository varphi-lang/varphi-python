name: Release and Publish

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    # Run on PRs to main and pushes to main branch (but not on tag pushes)
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref_type == 'branch')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --with dev

      - name: Lint with pylint
        run: poetry run pylint src/

      - name: Run tests with pytest
        run: poetry run pytest tests/

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    # Only run on push to main branch (not PRs, not tags)
    if: github.event_name == 'push' && github.ref_type == 'branch' && github.ref_name == 'main'
    needs: lint-and-test
    concurrency:
      group: release-${{ github.ref_name }}
      cancel-in-progress: false

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Reset to workflow SHA
        run: git reset --hard ${{ github.sha }}

      - name: Semantic Version Release
        id: semantic_release
        uses: python-semantic-release/python-semantic-release@v10.2.0
        with:
          github_token: ${{ secrets.GH_PAT }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Upload Release Artifacts to GitHub
        if: steps.semantic_release.outputs.released == 'true'
        uses: python-semantic-release/publish-action@v10.2.0
        with:
          github_token: ${{ secrets.GH_PAT }}
          tag: ${{ steps.semantic_release.outputs.tag }}

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    # Only run when tags are pushed (semantic-release creates tags)
    if: github.event_name == 'push' && github.ref_type == 'tag'

    permissions:
      contents: read
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/varphi-python

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true